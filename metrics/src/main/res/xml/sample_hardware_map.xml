<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>

<Robot type="FirstInspires-FTC">

    <!--

    NOTE: The name “Expansion Hub Portal 1” is what the FTC robot controller
    will call this if you scan for it, so leave it set to this value for
    consistency.

    You can retrieve the serial number value of the hub by configuring
    it from the robot controller phone, and taking note of the value
    found there. We always put that serial number (and the port numbers)
    on a label somewhere visible on the hub - to make it straightforward
    to swap in case one becomes damaged.

    If you need to use two REV expansion hubs, you will need to change
    the port number of at least one to something other than the default
    value of ‘2’, see the documentation from FIRST on how to do this at

    https://github.com/FIRST-Tech-Challenge/skystone/wiki/Using-Two-Expansion-Hubs

    Everywhere that [...] appears, is a value that you must provide:

    * For serial numbers, this must match the value in the physical
    hardware.

    * For a control hub, on the LynxUsbDevice element, the serial number must be
    "(embedded)", the parent module address is as given by the control hub
    itself, but is "2" by default.

    * For port numbers, this must match the actual physical socket
    on the REV hub

    * For names, any value may be used. We always use the same name
    in the XML file, as is used for the variable in Java that refers
    to the physical hardware. We have found that this makes it easier
    to keep things straight.
    -->

    <LynxUsbDevice
        name="Expansion Hub Portal 1"
        serialNumber="[...]" parentModuleAddress="5">

        <LynxModule name="[...]" port="9">

            <!-- The built-in IMU is always port="0" bus="0" -->
            <LynxEmbeddedIMU name="imu" port="0" bus="0" />

            <!-- **********************************************************

            DC Motors

            The "port" value refers to the physical port where the motor
            is connected to the REV expansion hub, numbered 0 - 3.

            The element named "Motor" is generic, but it will not set
            tuned PID(F) values for the type of motor plugged into the hub.

            You will observe more consistent velocity PID (RUN_WITH_ENCODERS)
            or RUN_TO_POSITION behavior if you can use the specific motor types
            provided by the SDK.

            In this first example, you'll notice a color comment. We've found
            that it is very helpful to use wire marking tape on the ports on
            the expansion hub, the cables that plug into them, both sides
            of any connections between the hub and the device, and the devices
            itself. It makes it very easy to identify what to check or replace
            when something is not working correctly.

            ************************************************************* -->

            <Motor name="motor1"  port="1" /> <!-- Yellow -->

            <!-- *************************************************************

            Servos are pretty straightforward. Ports are numbered 0-5

            Configuring a servo as a ContinuousRotationServo in this file
            will present an interface in software that "feels" more like a
            DCMotor for servos that are, or are able to be put into continuous
            rotation mode.

            See com.qualcomm.robotcore.hardware.CRServo in the SDK for more
            details.

            ************************************************************* -->

            <Servo name="servo1" port="0" />
            <ContinuousRotationServo name="crServo1" port="1" />

            <DigitalDevice name="TestDigitalDevice" port="1" />
            <RevTouchSensor name="TestRevTouchSensor" port="3" />
        </LynxModule>
    </LynxUsbDevice>
</Robot>